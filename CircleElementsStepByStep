from manim import *

class CircleElementsStepByStep(Scene):
    def construct(self):
        # Create the circle (persistent throughout)
        circle = Circle(radius=2, color=WHITE)
        self.play(Create(circle))

        # Step 1: Radius
        radius = Line(ORIGIN, RIGHT * 2, color=YELLOW)
        radius_label = Tex("Radius").next_to(radius, RIGHT, buff=0.1).scale(0.7)
        self.play(Create(radius), Write(radius_label))
        self.wait(1)
        self.play(FadeOut(radius), FadeOut(radius_label))

        # Step 2: Diameter
        diameter = Line(LEFT * 2, RIGHT * 2, color=ORANGE)
        diameter_label = Tex("Diameter").next_to(diameter, DOWN, buff=0.1).scale(0.7)
        self.play(Create(diameter), Write(diameter_label))
        self.wait(1)
        self.play(FadeOut(diameter), FadeOut(diameter_label))

        # Step 3: Secant
        secant = Line([-3, 1, 0], [3, -1, 0], color=RED)
        secant_label = Tex("Secant").next_to(secant, UP, buff=0.1).scale(0.7)
        self.play(Create(secant), Write(secant_label))
        self.wait(1)
        self.play(FadeOut(secant), FadeOut(secant_label))

        # Step 4: Tangent
        tangent = Line([0, 2, 0], [2, 2, 0], color=PURPLE)
        tangent_label = Tex("Tangent").next_to(tangent, UP, buff=0.1).scale(0.7)
        self.play(Create(tangent), Write(tangent_label))
        self.wait(1)
        self.play(FadeOut(tangent), FadeOut(tangent_label))

        # Step 5: Chord
        chord_start = circle.point_from_proportion(0.125)
        chord_end = circle.point_from_proportion(0.375)
        chord = Line(chord_start, chord_end, color=GREEN)
        chord_label = Tex("Chord").next_to(chord, UP, buff=0.1).scale(0.7)
        self.play(Create(chord), Write(chord_label))
        self.wait(2)

        # Fade out the final element and circle
        self.play(FadeOut(chord), FadeOut(chord_label), FadeOut(circle))
